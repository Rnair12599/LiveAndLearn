{"version":3,"sources":["config/firebase.js","components/NavBar.js","components/Chat.js","components/Chatbox.js","components/Dashboard.js","components/LandingPage.js","components/CurrentStreams.js","components/Profile.js","components/Categories.js","components/Guide.js","components/Main.js","components/SignUp.js","components/Login.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","NavBar","color","dark","expand","className","icon","onClick","this","toggleCollapse","left","to","Component","chatClient","StreamChat","setUser","id","name","image","channel","Chatbox","state","messages","user","isAuthenticated","auth","signOut","onAuthStateChanged","setState","loadMessages","database","ref","limitToLast","on","snap","message","val","key","push","saveMessage","catch","error","console","chatUser","slice","reverse","onSend","button","primary","position","variant","style","styles","container","chat","renderChatHeader","renderChat","settings","renderSettingsHeader","renderSignOutButton","flex","display","flexDirection","height","channelList","borderWidth","borderColor","borderRightStyle","borderLeftStyle","Dashboard","props","handleClick","data","e","upvotes","collection","doc","uid","set","question","qs","get","then","snapshot","forEach","questions","forceUpdate","logout","bind","handleChange","submitQuestion","componentDidMount","componentDidUpdate","log","target","value","blah","require","uuidv4","fire","justifyContent","alignItems","padding","map","d","idx","onChange","label","type","success","LandingPage","CurrentStreams","_isMounted","updateInfo","email","streamDescription","playbackID","streamTitle","streamCategory","streamURL","response","ok","Error","statusText","status","currentComp","onSnapshot","includeMetadataChanges","yes","fetch","responseJson","alert","url","playing","group","required","Profile","generateKey","streamKey","method","res","json","stream_key","playbackid","currentUser","update","found","userRef","budget","disabled","Categories","Guide","Main","exact","path","component","SignUp","createNewToken","chatToken","signup","password","chatID","chatImage","arr","split","temp","charAt","preventDefault","createUserWithEmailAndPassword","u","chatName","width","md","validate","Login","login","showsignup","signInWithEmailAndPassword","Footer","fluid","Date","getFullYear","href","App","authListener","localStorage","setItem","removeItem","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.65e78d9c.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\n// Your web app's Firebase configuration\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDT8vlV4rmSkA29wHnamuDAszkx_rTzw6s\",\n  authDomain: \"hacksc-2020-72721.firebaseapp.com\",\n  databaseURL: \"https://hacksc-2020-72721.firebaseio.com\",\n  projectId: \"hacksc-2020-72721\",\n  storageBucket: \"hacksc-2020-72721.appspot.com\",\n  messagingSenderId: \"120013387215\",\n  appId: \"1:120013387215:web:fc65d61082c955dff94eba\"\n};\n\n// ORIGINAL PIGGY BANK DATABASE (use when storage is not full)\n// var firebaseConfig = {\n//   apiKey: \"AIzaSyDm-9VzoXGLZji26XDghH9gx_n52rgmsHY\",\n//   authDomain: \"piggy-bank-71144.firebaseapp.com\",\n//   databaseURL: \"https://piggy-bank-71144.firebaseio.com\",\n//   projectId: \"piggy-bank-71144\",\n//   storageBucket: \"piggy-bank-71144.appspot.com\",\n//   messagingSenderId: \"677504131374\",\n//   appId: \"1:677504131374:web:7d80a2b5b5a3b094ed5abf\"\n// };\n\n// BACKUP PIGGY DATABASE\n\n/*var firebaseConfig = {\n     apiKey: \"AIzaSyBNGQ94b3sh_CA0Xud_2RKTDZcrmCSV1aQ\",\n     authDomain: \"piggy-backup.firebaseapp.com\",\n     databaseURL: \"https://piggy-backup.firebaseio.com\",\n     projectId: \"piggy-backup\",\n     storageBucket: \"piggy-backup.appspot.com\",\n     messagingSenderId: \"314565949487\",\n     appId: \"1:314565949487:web:e5b4472d9b1da8b367aeda\",\n     measurementId: \"G-VDJS8GGM8B\"\n   };*/\n\n//  //BACKUP PIGGY DATABASE 2\n\n/*var firebaseConfig = {\n     apiKey: \"AIzaSyB-3c-A7D9wL760suIlG1rpuaoHyCMnkcA\",\n     authDomain: \"piggybankbackup2.firebaseapp.com\",\n     databaseURL: \"https://piggybankbackup2.firebaseio.com\",\n     projectId: \"piggybankbackup2\",\n     storageBucket: \"piggybankbackup2.appspot.com\",\n     messagingSenderId: \"735217764135\",\n     appId: \"1:735217764135:web:70c868ce0316074a32cb02\",\n     measurementId: \"G-HZCM51BE1D\"\n   };*/\n\n//BACKUP PIGGY 3\n\n//    var firebaseConfig = {\n//      apiKey: \"AIzaSyBcdCvaA4MwFmUTjUcuPdsbqvCt-bNTJXw\",\n//      authDomain: \"piggy-back3.firebaseapp.com\",\n//      databaseURL: \"https://piggy-back3.firebaseio.com\",\n//      projectId: \"piggy-back3\",\n//      storageBucket: \"piggy-back3.appspot.com\",\n//      messagingSenderId: \"875501784070\",\n//      appId: \"1:875501784070:web:f4819338804975fc678787\"\n//    };\n\n//  var firebaseConfig = {\n//    apiKey: \"AIzaSyBcdCvaA4MwFmUTjUcuPdsbqvCt-bNTJXw\",\n//    authDomain: \"piggy-back3.firebaseapp.com\",\n//    databaseURL: \"https://piggy-back3.firebaseio.com\",\n//    projectId: \"piggy-back3\",\n//    storageBucket: \"piggy-back3.appspot.com\",\n//    messagingSenderId: \"875501784070\",\n//    appId: \"1:875501784070:web:f4819338804975fc678787\"\n//  };\n\n//BACKUP PIGGY 4\n// var firebaseConfig = {\n//   apiKey: \"AIzaSyBYex1zr2ofgcb-URB1jLEELCZmhpPSIx8\",\n//   authDomain: \"piggybankbackup4.firebaseapp.com\",\n//   databaseURL: \"https://piggybankbackup4.firebaseio.com\",\n//   projectId: \"piggybankbackup4\",\n//   storageBucket: \"piggybankbackup4.appspot.com\",\n//   messagingSenderId: \"678932646779\",\n//   appId: \"1:678932646779:web:7fd798f64138e0db63cbde\"\n// };\n\n//BACKUP PIGGY 5\n\n/*\n  var firebaseConfig = {\n    apiKey: \"AIzaSyD3P-Q1xAbQTYTPkD4mYnHDdEjl6dv2k1I\",\n    authDomain: \"piggybankbackup5.firebaseapp.com\",\n    databaseURL: \"https://piggybankbackup5.firebaseio.com\",\n    projectId: \"piggybankbackup5\",\n    storageBucket: \"piggybankbackup5.appspot.com\",\n    messagingSenderId: \"364062625328\",\n    appId: \"1:364062625328:web:1fab3cbafa6cd01d2067f5\"\n  };*/\n\n// var firebaseConfig = {\n//   apiKey: \"AIzaSyD3P-Q1xAbQTYTPkD4mYnHDdEjl6dv2k1I\",\n//   authDomain: \"piggybankbackup5.firebaseapp.com\",\n//   databaseURL: \"https://piggybankbackup5.firebaseio.com\",\n//   projectId: \"piggybankbackup5\",\n//   storageBucket: \"piggybankbackup5.appspot.com\",\n//   messagingSenderId: \"364062625328\",\n//   appId: \"1:364062625328:web:1fab3cbafa6cd01d2067f5\"\n// };\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// this.db = firebase.firestore();\nconst db = firebase.firestore();\n\nexport { db };\n\n// export default db;\n// export { db };\n\nexport default firebase;\n","import React, { Component } from 'react';\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavItem,\n  MDBNavLink,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBFormInline,\n  MDBDropdown,\n  MDBDropdownToggle,\n  MDBDropdownMenu,\n  MDBDropdownItem,\n  MDBIcon\n} from \"mdbreact\";\n\nexport class NavBar extends Component {\n    render() {\n        return (\n          <div>\n            {/* // <div> */}\n            <MDBNavbar color=\"dark-green\" dark expand=\"md\">\n              <MDBNavbarBrand>\n                <strong className=\"white-text\"> Live&Learn</strong>{\" \"}\n                <MDBIcon icon=\"apple-alt\" />\n              </MDBNavbarBrand>\n              <MDBNavbarToggler onClick={this.toggleCollapse} />\n              {/* <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar> */}\n              <MDBNavbarNav left>\n                <MDBNavItem>\n                  <MDBNavLink to=\"../\">\n                    <MDBIcon icon=\"home\" />\n                    Home\n                  </MDBNavLink>\n                </MDBNavItem>\n                <MDBNavItem>\n                  {/* <Link to=\"/streams\">About Me</Link> */}\n\n                  <MDBNavLink to={\"/streams\"}>\n                    <MDBIcon icon=\"video\" />\n                    Streams\n                  </MDBNavLink>\n                </MDBNavItem>\n                {/* <MDBNavItem>\n                  <MDBNavLink to=\"/categories\">Categories</MDBNavLink>\n                </MDBNavItem> */}\n                <MDBNavItem>\n                  <MDBNavLink to=\"/profile\">\n                    <MDBIcon icon=\"user-edit\" />\n                    Profile\n                  </MDBNavLink>\n                </MDBNavItem>\n                <MDBNavItem>\n                  <MDBNavLink to=\"/guide\">\n                    <MDBIcon icon=\"clipboard-list\" />\n                    Guide\n                  </MDBNavLink>\n                </MDBNavItem>\n                <MDBNavItem>\n                  <MDBNavLink to=\"/dashboard\">\n                    <MDBIcon icon=\"question\" />\n                    Dashboard\n                  </MDBNavLink>\n                </MDBNavItem>\n              </MDBNavbarNav>\n              {/* </div> */}\n              {/* </div> */}\n            </MDBNavbar>\n          </div>\n        );\n    }\n}\n\nexport default NavBar\n","import React from \"react\";\nimport { Chat, Channel, ChannelHeader, Window } from \"stream-chat-react\";\nimport {\n  MessageList,\n  MessageInput,\n  MessageLivestream\n} from \"stream-chat-react\";\nimport { MessageInputSmall, Thread } from \"stream-chat-react\";\nimport { StreamChat } from \"stream-chat\";\n\nimport \"stream-chat-react/dist/css/index.css\";\n\nconst chatClient = new StreamChat(\"4zbz7yw374h6\");\nconst userToken =\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoiZGl2aW5lLWFydC05In0.0Ce-vmn7fcec-PCD2OWy3sIVRLrmKRhBXp69vSGlgtw\";\n\nchatClient.setUser(\n  {\n    id: \"divine-art-9\",\n    name: \"Divine art\",\n    image: \"https://getstream.io/random_svg/?id=divine-art-9&name=Divine+art\"\n  },\n  userToken\n);\n\nconst channel = chatClient.channel(\"livestream\", \"spacex\", {\n  image: \"https://goo.gl/Zefkbx\",\n  name: \"SpaceX launch discussion\"\n});\n\nconst Chatter = () => (\n<div\n                 style={{\n                   display: \"flex\",\n                   justifyContent: \"left\",\n                   alignItems: \"center\",\n                  //  height: \"vh\",\n                  //  width: \"80vh\"\n                 }}\n               >\n  <Chat client={chatClient} theme={\"livestream dark\"}>\n    <Channel channel={channel} Message={MessageLivestream}>\n      <Window hideOnThread>\n        <ChannelHeader live />\n        <MessageList />\n        <MessageInput Input={MessageInputSmall} focus />\n      </Window>\n      <Thread fullWidth />\n    </Channel>\n  </Chat>\n  </div>\n);\n\nexport default Chatter;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GiftedChat } from \"react-web-gifted-chat\";\nimport firebase from \"../config/firebase\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nclass Chatbox extends Component {\n  constructor() {\n    super();\n    this.state = {\n      messages: [],\n      user: \"\",\n      isAuthenticated: false,\n    };\n  }\n\n//   async signIn() {\n//     const googleProvider = new firebase.auth.GoogleAuthProvider();\n//     try {\n//       await firebase.auth().signInWithPopup(googleProvider);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   }\n\n  signOut() {\n    firebase.auth().signOut();\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ isAuthenticated: true, user });\n        this.loadMessages();\n      } else {\n        this.setState({ isAuthenticated: false, user: {}, messages: [] });\n      }\n    });\n  }\n\n  loadMessages() {\n    const callback = snap => {\n      const message = snap.val();\n      message.id = snap.key;\n      const { messages } = this.state;\n      messages.push(message);\n      this.setState({ messages });\n    };\n    firebase\n      .database()\n      .ref(\"/messages/\")\n      .limitToLast(12)\n      .on(\"child_added\", callback);\n  }\n\n//   renderPopup() {\n//     return (\n//       <Dialog open={!this.state.isAuthenticated}>\n//         <DialogTitle id=\"simple-dialog-title\">Sign in</DialogTitle>\n//         <div>\n//           <List>\n//             <ListItem button onClick={() => this.signIn()}>\n//               <ListItemAvatar>\n//                 <Avatar style={{ backgroundColor: \"#eee\" }}>\n//                   <img\n//                     src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n//                     height=\"30\"\n//                     alt=\"G\"\n//                   />\n//                 </Avatar>\n//               </ListItemAvatar>\n//               <ListItemText primary=\"Sign in with Google\" />\n//             </ListItem>\n//           </List>\n//         </div>\n//       </Dialog>\n//     );\n//   }\n\n  onSend(messages) {\n    for (const message of messages) {\n      this.saveMessage(message);\n    }\n  }\n\n  saveMessage(message) {\n    return firebase\n      .database()\n      .ref(\"/messages/\")\n      .push(message)\n      .catch(function(error) {\n        console.error(\"Error saving message to Database:\", error);\n      });\n  }\n\n  renderSignOutButton() {\n    if (this.state.isAuthenticated) {\n      return <Button onClick={() => this.signOut()}>Sign out</Button>;\n    }\n    return null;\n  }\n\n  renderChat() {\n    return (\n      <GiftedChat\n        user={this.chatUser}\n        messages={this.state.messages.slice().reverse()}\n        onSend={messages => this.onSend(messages)}\n      />\n    );\n  }\n\n  renderChannels() {\n    return (\n      <List>\n        <ListItem button>\n          <ListItemAvatar>\n            <Avatar>D</Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Default\" />\n        </ListItem>\n      </List>\n    );\n  }\n\n  renderChannelsHeader() {\n    return (\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Channels\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n  renderChatHeader() {\n    return (\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Default channel\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n  renderSettingsHeader() {\n    return (\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Settings\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n\n  render() {\n    return (\n      <div style={styles.container}>\n        {/* {this.renderPopup()} */}\n        {/* <div style={styles.channelList}> */}\n          {/* {this.renderChannelsHeader()} */}\n          {/* {this.renderChannels()} */}\n        {/* </div> */}\n        <div style={styles.chat}>\n          {this.renderChatHeader()}\n          {this.renderChat()}\n        </div>\n        <div style={styles.settings}>\n          {this.renderSettingsHeader()}\n          {this.renderSignOutButton()}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"row\",\n    height: \"50vh\"\n  },\n  channelList: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\"\n  },\n  chat: {\n    display: \"flex\",\n    flex: 3,\n    flexDirection: \"column\",\n    borderWidth: \"1px\",\n    borderColor: \"#ccc\",\n    borderRightStyle: \"solid\",\n    borderLeftStyle: \"solid\"\n  },\n  settings: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\"\n  }\n};\n\nexport default Chatbox;\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\n","import React, { Component } from 'react'\nimport fire, { db } from \"../config/firebase\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody\n} from \"mdbreact\";\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavItem,\n  MDBNavLink,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBFormInline,\n  MDBDropdown,\n  MDBDropdownToggle,\n  MDBDropdownMenu,\n  MDBDropdownItem,\n  MDBIcon,\n  MDBListGroupItem,\n  MDBBadge\n} from \"mdbreact\";\n\nexport class Dashboard extends Component {\n         constructor(props) {\n           super(props);\n           //  this.componentDidMount();\n           //  this.callAPI = this.callAPI.bind(this);\n           this.logout = this.logout.bind(this);\n           this.handleChange = this.handleChange.bind(this);\n           this.submitQuestion = this.submitQuestion.bind(this);\n           this.componentDidMount = this.componentDidMount.bind(this);\n           this.componentDidUpdate = this.componentDidUpdate.bind(this);\n\n           this.state = {\n             question: \"\",\n             questions: [],\n             upvotes: []\n           };\n         }\n\n         handleChange(e) {\n           console.log(e.target.name);\n           this.setState({ [e.target.name]: e.target.value });\n           console.log(e.target.value);\n           //  }\n           console.log(this.state.name);\n                    //  this.forceUpdate();\n         }\n\n         submitQuestion(e) {\n           const uuidv4 = require(\"uuid/v4\");\n           var blah = uuidv4();\n           fire\n             .firestore()\n             .doc(`/questions/${blah}`)\n             .set({\n               uid: blah,\n               question: this.state.question,\n               upvotes: 0\n             });\n         }\n\n         componentDidMount() {\n           const qs = [];\n           db.collection(\"questions\")\n             .get()\n             .then(snapshot => {\n               snapshot.forEach(doc => {\n                 qs.push(doc.data());\n                 this.state.questions = qs;\n               });\n             });\n         }\n\n         componentDidUpdate() {\n    const qs = [];\n    db.collection(\"questions\")\n      .get()\n      .then(snapshot => {\n        snapshot.forEach(doc => {\n          //  qs[doc.key] = doc.data();\n          qs.push(doc.data());\n          this.state.questions = qs;\n        });\n      });\n      // this.forceUpdate();\n         }\n\n         logout() {\n           fire.auth().signOut();\n         }\n\n         handleClick = (data, e) => {\n           data.upvotes++;\n        //    var username = fire.auth().currentUser.email;\n           db.collection(\"questions\")\n             .doc(data.uid)\n             .set({\n               question: data.question,\n               upvotes: data.upvotes,\n               uid: data.uid\n               //  usersWhoUpvoted: data.usersWhoUpvoted.push(fire.auth().currentUser.email);\n             });\n           const qs = [];\n           db.collection(\"questions\")\n             .get()\n             .then(snapshot => {\n               snapshot.forEach(doc => {\n                 //  qs[doc.key] = doc.data();\n                 qs.push(doc.data());\n                 this.state.questions = qs;\n               });\n             });\n             this.forceUpdate();\n         };\n         //  };\n         render() {\n           return (\n             <div\n               style={{\n                 display: \"flex\",\n                 justifyContent: \"center\",\n                 alignItems: \"center\",\n                 height: \"100vh\"\n               }}\n             >\n               <MDBContainer>\n                 <MDBCard style={{ padding: \"20px\" }}>\n                   <center>\n                     <h1>Have something to share?</h1>\n                     <h3>\n                       Ask us a thought provoking question.\n                     </h3>{\" \"}\n                     {this.state.questions.map((d, idx) => (\n                       <MDBListGroupItem\n                         className=\"d-flex justify-content-between align-items-center\"\n                         key={idx}\n                       >\n                         {d.question}{\" \"}\n                         <MDBIcon\n                           value={d}\n                           onClick={this.handleClick.bind(this, d)}\n                           icon=\"thumbs-up\"\n                         >\n                           {\" \"}\n                           {d.upvotes}{\" \"}\n                         </MDBIcon>\n                         {/* <MDBBadge color=\"green\" pill>\n                             3\n                           </MDBBadge>{\" \"} */}\n                       </MDBListGroupItem>\n                     ))}\n                     {/* </ul> */}\n                     {/* </ol> */}\n                     <MDBInput\n                       value={this.state.question}\n                       onChange={this.handleChange}\n                       label=\"Ask a question\"\n                       //  icon=\"envelope\"\n                       //  group\n                       name=\"question\"\n                       type=\"text\"\n                       //  validate\n                       error=\"wrong\"\n                       success=\"right\"\n                       //   disabled\n                     />\n                     <MDBBtn\n                       color=\"green\"\n                       type=\"button\"\n                       onClick={this.submitQuestion}\n                     >\n                       Submit\n                     </MDBBtn>\n                   </center>\n                 </MDBCard>\n               </MDBContainer>\n             </div>\n           );\n         }\n       }\n\nexport default Dashboard\n","import React, { Component } from \"react\";\n// import Router from 'react-router';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport fire, { db } from \"../config/firebase\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody\n} from \"mdbreact\";\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavItem,\n  MDBNavLink,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBFormInline,\n  MDBDropdown,\n  MDBDropdownToggle,\n  MDBDropdownMenu,\n  MDBDropdownItem,\n  MDBIcon,\n  MDBListGroupItem,\n  MDBBadge\n} from \"mdbreact\";\nimport ReactPlayer from \"react-player\";\nimport NavBar from './NavBar';\nimport Chatter from './Chat';\nimport Chatbox from './Chatbox';\nimport Dashboard from \"./Dashboard\";\nexport class LandingPage extends Component {\n         constructor(props) {\n           super(props);\n           //  this.componentDidMount();\n           //  this.callAPI = this.callAPI.bind(this);\n          //  this.logout = this.logout.bind(this);\n          //  this.handleChange = this.handleChange.bind(this);\n          //  this.submitQuestion = this.submitQuestion.bind(this);\n          //  this.componentDidMount = this.componentDidMount.bind(this);\n          //  this.state = {\n            //  apiResponse: \"default testAPI state\",\n            //  question: \"\",\n            //  questions: [],\n            //  upvotes: []\n          //  };\n          }\n\n         render() {\n           return (\n             <div\n             // style={{\n             //   display: \"flex\",\n             //   justifyContent: \"center\",\n             //   alignItems: \"center\",\n             //   height: \"100vh\"\n             // }}\n             >\n               {/* <Router> */}\n               {/* <NavBar /> */}\n               <div\n                 style={{\n                   display: \"flex\",\n                   justifyContent: \"center\",\n                   alignItems: \"center\",\n                   height: \"100vh\"\n                 }}\n               >\n                 <MDBContainer>\n                   <MDBCard style={{ padding: \"20px\" }}>\n                     {/* <center> */}\n                       <h1>Live&Learn</h1>\n                       <h3>\n                         Free interactive live streams for educators and\n                         students\n                       </h3>\n                       {/* <div style={{height:\"10vh\"}}> */}\n                         <Chatbox />\n                       {/* </div> */}\n                     {/* </center> */}\n                   </MDBCard>\n                 </MDBContainer>\n\n                 {/* <p className=\"App-intro\">{this.state.apiResponse}</p> */}\n               </div>\n             </div>\n           );\n         }\n       }\n\nexport default LandingPage;\n","import React, { Component } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBIcon\n} from \"mdbreact\";\nimport { db } from \"../config/firebase\";\nimport fire from \"../config/firebase\";\nimport ReactPlayer from \"react-player\";\nimport Chatbox from \"./Chatbox\";\n\nexport class CurrentStreams extends Component {\n  _isMounted = false;\n  constructor() {\n    super();\n    this.updateInfo = this.updateInfo.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    //  this.generateKey = this.generateKey.bind(this);\n    //  this.logout = this.logout.bind(this);\n    this.state = {\n      //  streamKey: \"\",\n      email: \"\",\n      streamDescription: \"\",\n      playbackID: \"\",\n      streamTitle: \"\",\n      streamCategory: \"\",\n      streamURL: \"\"\n    };\n  }\n  handleChange(e) {\n    //  console.log(e.target.value);\n    // console.log(e.target.name);\n    if (this._isMounted) {\n      console.log(e.target.name);\n      this.setState({ [e.target.name]: e.target.value });\n      console.log(e.target.value);\n    }\n    console.log(this.state.name);\n  }\n\n  handleErrors(response) {\n    if (!response.ok) {\n      throw Error(response.statusText);\n    }\n    return response;\n  }\n  fetchStatusHandler(response) {\n    if (response.status === 200) {\n      return response;\n    } else {\n      throw new Error(response.statusText);\n    }\n  }\n  updateInfo() {\n    if (this.state.email == \"\") {\n      alert(\"please enter a valid email\");\n      return;\n    }\n    let currentComp = this;\n    // fire.auth().onAuthStateChanged(function(user) {\n    // if (user) {\n    var found = 0;\n    var userRef = db.collection(\"users\").doc(this.state.email);\n    // var username = fire.auth().currentUser.email;\n    userRef.onSnapshot(\n      {\n        includeMetadataChanges: true\n      },\n      function(doc) {\n        try {\n          //    if (this._isMounted) {\n\n          currentComp.setState({\n            //  budget: doc.data().budget,\n            //  bio: doc.data().bio,\n            //  focus: doc.data().focus,\n            //  name: doc.data().name\n            // streamKey: doc.data().streamKey,\n            streamDescription: doc.data().streamDescription,\n            playbackID: doc.data().playbackID,\n            streamTitle: doc.data().streamTitle,\n            streamCategory: doc.data().streamCategory\n          });\n          let yes = \"https://stream.mux.com/\" + doc.data().playbackID + \".m3u8\";\n\n          fetch(yes)\n            .then(responseJson => {\n              if (responseJson.ok) {\n              currentComp.setState({\n                streamURL: yes\n              });\n              // console.log(\"allow it\");\n              // Do something with the response\n              } else {\n                alert(\"Stream is currently offline!\");\n                currentComp.setState({\n                  streamTitle: \"OFFLINE\",\n                  streamDescription: \"OFFLINE\",\n                  streamCategory: \"OFFLINE\",\n                    streamURL:\n                      \"https://pixabay.com/videos/download/video-7070_large.mp4\"\n                });\n                return;\n              }\n            })\n            .catch(error => {\n              // alert(\"Stream is currently offline!\");\n              // currentComp.setState({});\n            });\n          // fetch(yes, {\n          //   method: \"GET\"\n          // })\n          //   .then(this.handleErrors)\n          //   // .then(response => console.log(\"ok\"))\n          //   .catch(error => console.log(error));\n\n          // fetch(yes)\n          //   .then(this.fetchStatusHandler)\n          //   // .then(function(response) {\n          //   //   return response.blob();\n          //   // })\n          //     // .then(function(blob) {\n          //     //   alert(blob.size);\n          //     // })\n          //   .catch(function(error) {\n          //     alert(error);\n          //   });\n          // fetch(yes, {\n          //  method: \"GET\"}).then(function(){\n          //    alert(\"yay\");\n          //  })\n          //  .catch(error => {\n          //    alert(error) });\n\n          // }\n        } catch (error) {\n          alert(\"Something went wrong\");\n          // console.log(\"We getting an error: \", error); // ADD back later\n          found = 0;\n        }\n      }\n    );\n\n    // if (found == 1) {\n    //   //console.log(\"does hit this\")\n    // } else {\n    //   currentComp.setState({\n    //     budget: [\"N/A\"]\n    //   });\n    // }\n    // }\n    // });\n    // this.updateInfo();\n    // this.updateInfo();\n\n    /*var blah = \"\";\n           blah += \"https://stream.mux.com/\";\n           blah += this.state.playbackID;\n           blah += \".m3u8\";\n           console.log(blah);\n           this.setState({streamURL: blah});\n           this.render();*/\n\n    //  this.componentWillUnmount();\n    //  this.componentDidMount();\n    //  var bruh = JSON.stringify(this.state.playbackID);\n    //  console.log(this.state.playbackID);\n    //  console.log(JSON.stringify(this.state.playbackID));\n    //  blah = \"https://stream.mux.com/\" + bruh + \".m3u8\";\n    //  this.setState({ streamURL: blah });\n    //  console.log(this.state.streamURL);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n  }\n  //  componentDidMount() {\n  //    this._isMounted = true;\n\n  //    let currentComp = this;\n  //    // this.updateInfo();\n  //    fire.auth().onAuthStateChanged(function(user) {\n  //      if (user) {\n  //        var found = 0;\n  //        var userRef = db\n  //          .collection(\"users\")\n  //          .doc(this.statee.use);\n  //        var username = fire.auth().currentUser.email;\n  //        userRef.onSnapshot(\n  //          {\n  //            includeMetadataChanges: true\n  //          },\n  //          function(doc) {\n  //            try {\n  //              //    if (this._isMounted) {\n\n  //              currentComp.setState({\n  //                //  budget: doc.data().budget,\n  //                //  bio: doc.data().bio,\n  //                //  focus: doc.data().focus,\n  //                //  name: doc.data().name\n  //                // streamKey: doc.data().streamKey,\n  //                streamDescription: doc.data().streamDescription,\n  //                playbackID: doc.data().playbackID,\n  //                streamTitle: doc.data().streamTitle,\n  //                streamCategory: doc.data().streamCategory\n  //              });\n  //              // }\n  //            } catch (error) {\n  //              console.log(\"We getting an error: \", error); // ADD back later\n  //              found = 0;\n  //            }\n  //          }\n  //        );\n\n  //        if (found == 1) {\n  //          //console.log(\"does hit this\")\n  //        } else {\n  //          currentComp.setState({\n  //            budget: [\"N/A\"]\n  //          });\n  //        }\n  //      }\n  //    });\n  //   //  this.updateInfo();\n  //  }\n\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\"\n        }}\n      >\n        <MDBContainer>\n          <MDBCard style={{ padding: \"20px\" }}>\n            <center>\n              <MDBBtn color=\"green\" type=\"button\" onClick={this.updateInfo}>\n                {/* <MDBIcon icon=\"video\" /> */}\n                Load Stream\n              </MDBBtn>\n              <ReactPlayer url={this.state.streamURL} playing=\"true\" />\n              <MDBInput\n                value={this.state.email}\n                onChange={this.handleChange}\n                label=\"Enter user's email\"\n                //  icon=\"envelope\"\n                group\n                name=\"email\"\n                type=\"text\"\n                // validate\n                error=\"wrong\"\n                success=\"right\"\n                required\n                //  disabled\n              />\n              {/* <div className=\"text-center py-4 mt-3\"> */}\n\n              {/* <h3>Current streams here!</h3> */}\n              <h4>Title: {this.state.streamTitle}</h4>\n              <h5>Description: {this.state.streamDescription}</h5>\n              <h6>Category: {this.state.streamCategory}</h6>\n\n              <p></p>\n            </center>\n          </MDBCard>\n        </MDBContainer>\n        <MDBContainer>\n          <div className=\"w-85 p-20\">\n          <MDBCard\n            style={{\n              // display: \"flex\",\n              // justifyContent: \"center\",\n              alignItems: \"left\"\n              // height: \"10vh\"\n            }}\n          >\n            <Chatbox />\n          </MDBCard>\n          </div>\n        </MDBContainer>\n        /\n      </div>\n    );\n  }\n}\n\nexport default CurrentStreams;\n","import React, { Component } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBIcon\n} from \"mdbreact\";\nimport { db } from \"../config/firebase\";\nimport fire from \"../config/firebase\";\nexport class Profile extends Component {\n  _isMounted = false;\n  constructor() {\n    super();\n    this.updateInfo = this.updateInfo.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.generateKey = this.generateKey.bind(this);\n    //  this.logout = this.logout.bind(this);\n    this.state = {\n      //  budget: \"\",\n      //  bio: \"\",\n      //  focus: \"\",\n      //  display_budget: \"\",\n      // Name: \"\",\n      streamKey: \"\",\n      streamDescription: \"\",\n      playbackID: \"\",\n      streamTitle: \"\",\n      streamCategory: \"\"\n    };\n  }\n  handleChange(e) {\n    console.log(e.target.value);\n    // console.log(e.target.name);\n    if (this._isMounted) {\n      this.setState({ [e.target.name]: e.target.value });\n    }\n    //    console.log(this.state.name);\n  }\n\n  updateInfo(e) {\n    var docRef = db.collection(\"users\").doc(fire.auth().currentUser.email);\n    docRef\n      .update({\n        // Name: this.state.Name,\n        streamKey: this.state.streamKey,\n        playbackID: this.state.playbackID,\n        streamTitle: this.state.streamTitle,\n        streamDescription: this.state.streamDescription,\n        streamCategory: this.state.streamCategory\n      })\n      .then(function() {\n        alert(\"UPDATE DONE\");\n      })\n      .catch(function(error) {\n        alert(\"something went wrong..\");\n      });\n  }\n\n  // fetch('/streamLive', { method: 'POST'}).then((res) => res.json()).then(console.log).catch(console.error)\n  generateKey = () => {\n    if (this.state.streamKey != null) {\n      alert(\"You already have a stream key.\");\n      return;\n    }\n    // callAPI() {\n    fetch(\"http://localhost:9000/streamLive\", {\n      method: \"POST\"\n    })\n      .then(res => res.json())\n      .then(data =>\n        this.setState({\n          streamKey: data.stream_key,\n          playbackID: data.playbackid\n        })\n      );\n    this.updateInfo();\n  };\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  componentDidMount() {\n    this._isMounted = true;\n\n    let currentComp = this;\n\n    fire.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        var found = 0;\n        var userRef = db.collection(\"users\").doc(fire.auth().currentUser.email);\n        var username = fire.auth().currentUser.email;\n        userRef.onSnapshot(\n          {\n            includeMetadataChanges: true\n          },\n          function(doc) {\n            try {\n              //    if (this._isMounted) {\n\n              currentComp.setState({\n                //  budget: doc.data().budget,\n                //  bio: doc.data().bio,\n                //  focus: doc.data().focus,\n                //  name: doc.data().name\n                email: doc.data().email,  \n                streamKey: doc.data().streamKey,\n                streamDescription: doc.data().streamDescription,\n                playbackID: doc.data().playbackID,\n                streamTitle: doc.data().streamTitle,\n                streamCategory: doc.data().streamCategory\n              });\n              // }\n            } catch (error) {\n              console.log(\"We getting an error: \", error); // ADD back later\n              found = 0;\n            }\n          }\n        );\n\n        if (found == 1) {\n          //console.log(\"does hit this\")\n        } else {\n          currentComp.setState({\n            budget: [\"N/A\"]\n          });\n        }\n      }\n    });\n  }\n\n  logout() {\n    fire.auth().signOut();\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\",\n          // margin: \"\"\n        }}\n      >\n        <MDBContainer>\n          <MDBCard style={{padding:\"20px\"}}>\n            <center>\n              <h3>Stream Configurations</h3>\n              {/* <p>\n                Lorem Ipsum is simply dummy text of the printing and typesetting\n                industry. Lorem Ipsum has been the industry's standard dummy\n                text ever since the 1500s, when an unknown printer took a galley\n                of type and scrambled it to make a type specimen book. It has\n                survived not only five centuries, but also the leap into\n                electronic typesetting, remaining essentially unchanged. It was\n                popularised in the 1960s with the release of Letraset sheets\n                containing Lorem Ipsum passages, and more recently with desktop\n                publishing software like Aldus PageMaker including versions of\n                Lorem Ipsum.\n              </p> */}\n              {/* <MDBInput\n                value={this.state.Name}\n                onChange={this.handleChange}\n                label=\"email\"\n                //  icon=\"envelope\"\n                group\n                name=\"email\"\n                type=\"text\"\n                //  validate\n                error=\"wrong\"\n                success=\"right\"\n                // required\n                 disabled\n              /> */}\n              <MDBInput\n                value={this.state.streamTitle}\n                onChange={this.handleChange}\n                label=\"Stream Title\"\n                //  icon=\"envelope\"\n                group\n                name=\"streamTitle\"\n                type=\"text\"\n                //  validate\n                error=\"wrong\"\n                success=\"right\"\n                required\n                //  disabled\n              />\n              <MDBInput\n                value={this.state.streamDescription}\n                onChange={this.handleChange}\n                label=\"Stream Description\"\n                //  icon=\"envelope\"\n                group\n                name=\"streamDescription\"\n                type=\"text\"\n                //  validate\n                error=\"wrong\"\n                success=\"right\"\n                required\n                //  disabled\n              />\n              <MDBInput\n                value={this.state.streamCategory}\n                onChange={this.handleChange}\n                label=\"Stream Category\"\n                //  icon=\"envelope\"\n                group\n                name=\"streamCategory\"\n                type=\"text\"\n                //  validate\n                error=\"wrong\"\n                success=\"right\"\n                required\n                //  disabled\n              />\n              <MDBInput\n                value={this.state.streamKey}\n                onChange={this.handleChange}\n                label=\"Stream Key\"\n                //  icon=\"envelope\"\n                group\n                name=\"streamKey\"\n                type=\"text\"\n                //  validate\n                error=\"wrong\"\n                success=\"right\"\n                disabled\n                //  disabled\n              />\n              <MDBInput\n                value={this.state.playbackID}\n                onChange={this.handleChange}\n                label=\"Playback ID\"\n                //  icon=\"envelope\"\n                group\n                name=\"playbackID\"\n                type=\"text\"\n                //  validate\n                error=\"wrong\"\n                success=\"right\"\n                disabled\n                //  disabled\n              />\n\n              <div className=\"text-center py-4 mt-3\">\n                <MDBBtn color=\"primary\" type=\"button\" onClick={this.updateInfo}>\n                  <MDBIcon icon=\"edit\" />\n                  Update Info\n                </MDBBtn>\n                <MDBBtn\n                  color=\"warning\"\n                  type=\"button\"\n                  onClick={this.generateKey}\n                >\n                  <MDBIcon icon=\"key\" />\n                  Generate Key\n                </MDBBtn>\n                <MDBBtn color=\"success\" type=\"button\" onClick={this.logout}>\n                  Logout\n                </MDBBtn>\n              </div>\n            </center>\n          </MDBCard>\n        </MDBContainer>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react'\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody\n} from \"mdbreact\";\n\nexport class Categories extends Component {\n    render() {\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"100vh\"\n            }}\n          >\n            <MDBContainer>\n              <MDBCard>\n                <center>\n                  <h3>Categories here!</h3>\n                  <p>\n                    Lorem Ipsum is simply dummy text of the printing and\n                    typesetting industry. Lorem Ipsum has been the industry's\n                    standard dummy text ever since the 1500s, when an unknown\n                    printer took a galley of type and scrambled it to make a\n                    type specimen book. It has survived not only five centuries,\n                    but also the leap into electronic typesetting, remaining\n                    essentially unchanged. It was popularised in the 1960s with\n                    the release of Letraset sheets containing Lorem Ipsum\n                    passages, and more recently with desktop publishing software\n                    like Aldus PageMaker including versions of Lorem Ipsum.\n                  </p>\n                </center>\n              </MDBCard>\n            </MDBContainer>\n          </div>\n        )\n    }\n}\n\nexport default Categories\n","import React, { Component } from 'react'\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard, \n  MDBCardText,\n  MDBCardTitle,\n  MDBCardBody,\n  MDBIcon\n} from \"mdbreact\";\n\nexport class Guide extends Component {\n    render() {\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"100vh\"\n            }}\n          >\n            <MDBContainer>\n              <MDBCard style={{ padding: \"20px\" }}>\n                <center>\n                  <h2>Getting Started</h2>\n                  <p>\n                    <i>\n                      First and foremost, welcome to Live&Learn, we are so happy\n                      to have you on board. Here at Live&Learn, we provide you a platform for you to broadcast seamlessly and share deeper connections with others.  \n                    </i>\n                  </p>\n                  <h4>\n                    <MDBIcon icon=\"headset\" />\n                    <b>Streamer</b>\n                  </h4>\n                  <p>\n                    Please navigate to the Profile page via the Navigation Bar\n                    in order to set your stream key and stream ID. This will\n                    allow you to broadcast to audiences. In order to stream, you\n                    must use valid broadcasting service like OBS and configure\n                    your stream settings accordingly. Never share your stream\n                    key with anyone. You can also update your stream\n                    information, like your stream title, description, and\n                    category on the Profile page.\n                  </p>\n                  <h4>\n                    <MDBIcon icon=\"book\" />\n                    <b>User</b>\n                  </h4>\n                  <p>\n                    We welcome you to indulge yourself in spending time and\n                    relaxing on our site. You can view anybody's broadcast on\n                    this site. Navigate to the Streams section of our website\n                    and simply just enter the person's email you would like to\n                    view. Feel free to chat with others online and treat each\n                    other with respect! There is a broadcast for everyone to\n                    enjoy here.\n                  </p>\n                  <h2>\n                    <MDBIcon icon=\"street-view\" />\n                    The Rules\n                  </h2>\n                  <p>\n                    Don't challenge or attack others. The discussions and\n                    comments are meant to stimulate conversation not to create\n                    contention. Let others have their say, just as you may.\n                    Don't post commercial messages on any discussion list,\n                    resource library entry, or other area where others might see\n                    it. Contact people directly with product and service\n                    information if you believe it would help them. Use caution\n                    when discussing products. Information posted on the lists\n                    and in the libraries is available for all to see, and\n                    comments are subject to libel, slander, and antitrust laws.\n                    All defamatory, abusive, profane, threatening, offensive, or\n                    illegal materials are strictly prohibited. Do not post\n                    anything that you would not want the world to see or that\n                    you would not want anyone to know came from you. Please note\n                    carefully all items listed in the disclaimer and legal rules\n                    below, particularly regarding the copyright ownership of\n                    information posted. Remember that other participants have\n                    the right to reproduce postings to this site unless you\n                    specify otherwise. Post your message or documents only to\n                    the most appropriate lists or libraries. Do not spam several\n                    lists or libraries with the same message. All messages must\n                    add to the body of knowledge. We reserve the right to reject\n                    any message for any reason.\n                  </p>\n                </center>\n              </MDBCard>\n            </MDBContainer>\n          </div>\n        );\n    }\n}\n\nexport default Guide\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport LandingPage from \"./LandingPage.js\";\nimport CurrentStreams from \"./CurrentStreams.js\";\nimport Profile from './Profile';\nimport Categories from './Categories';\nimport Guide from \"./Guide.js\";\nimport Dashboard from \"./Dashboard.js\";\n// import AboutMe from \"./aboutme\";\n// import Contact from \"./contact\";\n// import Projects from \"./projects\";\n// import Resume from \"./resume\";\n\nconst Main = () => (\n  <Switch>\n    <Route exact path=\"/\" component={LandingPage} />\n    <Route path=\"/streams\" component={CurrentStreams}/>\n    <Route path=\"/profile\" component={Profile}/>\n    <Route path=\"/categories\" component={Categories}/>\n    <Route path=\"/guide\" component={Guide}/>\n    <Route path=\"/dashboard\" component={Dashboard}/>\n    {/* <Route path=\"/aboutme\" component={AboutMe} />\n    <Route path=\"/contact\" component={Contact} />\n    <Route path=\"/projects\" component={Projects} />\n    <Route path=\"/resume\" component={Resume} /> */}\n  </Switch>\n);\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport { StreamChat } from 'stream-chat';\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBModalBody,\n  MDBCardBody\n} from \"mdbreact\";\nimport { Link } from \"react-router-dom\";\nimport fire from \"../config/firebase\";\n\nexport class SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.signup = this.signup.bind(this);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      chatID: \"\",\n      chatImage: \"\",\n      chatToken: \"\"\n    };\n  }\n  handleChange(e) {\n    // console.log(e.target.value);\n    this.setState({ [e.target.name]: e.target.value });\n    if(e.target.name === \"name\"){\n      let arr = e.target.value.split(\" \");\n      let temp = arr[0].charAt(0) + arr[1];\n      this.setState({ chatID: temp});\n      this.setState({ chatImage: 'https://getstream.io/random_svg/?id=' + temp + '&name=' + e.target.value })\n      this.createNewToken();\n    }\n\n  }\n\n  createNewToken = () => {\n    fetch(\"http://localhost:9000/chatToken\", {\n      method: \"POST\"\n    })\n      .then(res => res.json())\n      .then((data) =>{\n        //alert(data.chatToken);\n        this.setState({\n          chatToken: data.chatToken,\n        })\n      });\n  };\n\n  signup(e) {\n    if (this.state.name == \"\" || this.state.email == \"\" || this.state.password == \"\") {\n      alert(\"please fill out all fields\");\n      return;\n    }\n    e.preventDefault();\n    // console.log(\"passed signup\")\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\n      .then(u => {})\n      .then(u => {\n        console.log(u);\n      })\n      .catch(error => {\n        console.log(error);\n        alert(error);\n      });\n    fire\n      .firestore()\n      .doc(`/users/${this.state.email}`)\n      .set({\n        name: this.state.name,\n        password: this.state.password,\n        streamKey: null,\n        playbackID: null,\n        streamTitle: null,\n        streamDescription: null,\n        streamCategory: null,\n        chatID: this.state.chatID,\n        chatName: this.state.name,\n        chatImage: this.state.chatImage,\n        chatToken: this.state.chatToken\n      });\n  }\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"3vh\",\n          width: \"1000px\"\n        }}\n      >\n        <MDBModalBody>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol md=\"6\">\n                <MDBCard>\n                  <MDBCardBody>\n                    <form>\n                      <p className=\"h4 text-center py-4\">Sign up</p>\n                      <div className=\"grey-text\">\n                        <MDBInput\n                          value={this.state.name}\n                          onChange={this.handleChange}\n                          label=\"Your name\"\n                          icon=\"user\"\n                          group\n                          name=\"name\"\n                          type=\"text\"\n                          validate\n                          error=\"wrong\"\n                          success=\"right\"\n                        />\n                        <MDBInput\n                          value={this.state.email}\n                          onChange={this.handleChange}\n                          label=\"Your email\"\n                          icon=\"envelope\"\n                          group\n                          name=\"email\"\n                          type=\"email\"\n                          validate\n                          error=\"wrong\"\n                          success=\"right\"\n                        />\n                        {/* <MDBInput\n                          label=\"Confirm your email\"\n                          icon=\"exclamation-triangle\"\n                          group\n                          type=\"text\"\n                          validate\n                          error=\"wrong\"\n                          success=\"right\"\n                        /> */}\n                        <MDBInput\n                          value={this.state.password}\n                          onChange={this.handleChange}\n                          label=\"Your password\"\n                          icon=\"lock\"\n                          group\n                          name=\"password\"\n                          type=\"password\"\n                          validate\n                        />\n                      </div>\n                      <div className=\"text-center py-4 mt-3\">\n                        <MDBBtn\n                          color=\"orange\"\n                          type=\"submit\"\n                          onClick={this.signup}\n                        >\n                          Register\n                        </MDBBtn>\n                        <MDBBtn color=\"blue\" type=\"submit\" onClick=\"close\">\n                          Close\n                        </MDBBtn>\n                      </div>\n                    </form>\n                  </MDBCardBody>\n                </MDBCard>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n        </MDBModalBody>\n      </div>\n    );\n  }\n}\n\nexport default SignUp;\n","import React, { Component } from \"react\";\nimport fire from '../config/firebase';\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody\n} from \"mdbreact\";\nimport SignUp from './SignUp';\n\nexport class Login extends Component {\n         constructor(props) {\n           super(props);\n           this.login = this.login.bind(this);\n           this.handleChange = this.handleChange.bind(this);\n           this.signup = this.signup.bind(this);\n           this.state = {\n             email: \"\",\n             password: \"\",\n             showsignup: false\n             //  isVerified: false\n           };\n         }\n         login(e) {\n           //    if (this.state.isVerified == true) {\n           e.preventDefault();\n           console.log(this.state.email);\n           fire\n             .auth()\n             .signInWithEmailAndPassword(this.state.email, this.state.password)\n             .then(u => {})\n             .catch(error => {\n               alert(error);\n             });\n           //    } else {\n           //  alert(\"Please complete human verification.\");\n           //    }\n         }\n\n         handleChange(e) {\n           // console.log(e.target.value);\n           this.setState({ [e.target.name]: e.target.value });\n         }\n\n         signup(e) {\n             this.setState({\n                 showsignup: true\n             });\n         }\n\n         render() {\n           return (\n             <div\n               style={{\n                 display: \"flex\",\n                 justifyContent: \"center\",\n                 alignItems: \"center\",\n                 height: \"100vh\"\n               }}\n             >\n               <MDBContainer>\n                 <MDBCard style={{ justifyContent: \"center\", padding: \"50px\" }}>\n                   <form>\n                     <p className=\"h5 mb-4\">Sign in to Live&Learn</p>\n                     <div className=\"grey-text\">\n                       <MDBInput\n                         value={this.state.email}\n                         onChange={this.handleChange}\n                         label=\"Type your email\"\n                         icon=\"envelope\"\n                         group\n                         name=\"email\"\n                         type=\"email\"\n                         validate\n                         error=\"wrong\"\n                         success=\"right\"\n                       />\n                       <MDBInput\n                         value={this.state.password}\n                         onChange={this.handleChange}\n                         label=\"Type your password\"\n                         icon=\"lock\"\n                         group\n                         name=\"password\"\n                         type=\"password\"\n                         validate\n                       />\n                     </div>\n                     <div className=\"d-inline\">\n                       <MDBBtn type=\"submit\" onClick={this.login}>\n                         Login\n                       </MDBBtn>\n                     </div>\n                     <div className=\"d-inline\">\n                       <MDBBtn color=\"indigo\" onClick={this.signup}>\n                         SignUp\n                       </MDBBtn>\n                       {this.state.showsignup ? <SignUp /> : null}\n                     </div>\n                   </form>\n                 </MDBCard>\n               </MDBContainer>\n             </div>\n           );\n         }\n       }\n\nexport default Login;\n","import React from \"react\";\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter, MDBIcon } from \"mdbreact\";\n\nconst Footer = () => {\n  return (\n    <center>\n      <MDBFooter color=\"dark-green\" className=\"font-small pt-4 mt-4\">\n        <div className=\"footer-copyright text-center py-3\">\n          <center>\n            <MDBContainer fluid>\n              &copy; {new Date().getFullYear()}:\n              <a href=\"https://github.com/jaeeee/HackSC_2020/\"> Live&Learn </a>{\" \"}\n              <MDBIcon icon=\"heart\" />\n              {/* Made at USC. */}\n            </MDBContainer>\n          </center>\n        </div>\n      </MDBFooter>\n    </center>\n  );\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport \"./App.css\";\nimport Main from './components/Main';\nimport fire from './config/firebase';\nimport {db} from './config/firebase';\nimport Login from './components/Login';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavItem,\n  MDBNavLink,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBFormInline,\n  MDBDropdown,\n  MDBDropdownToggle,\n  MDBDropdownMenu,\n  MDBDropdownItem\n} from \"mdbreact\";\nimport NavBar from './components/NavBar';\nimport Footer from './components/Footer';\nexport class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: null,\n      name: \"\"\n    };\n    this.authListener = this.authListener.bind(this);\n  }\n\n  render() {\n    return (\n      <div>\n        {/* </MDBCollapse> */}\n        {/* /</div></MDBNavbar> */}\n        {this.state.user ? <NavBar /> : \"\"}\n        {this.state.user ? <Main /> : <Login />}\n        <center>{this.state.user ? <Footer /> : \"\"}</center>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.authListener();\n    // let currentComp = this;\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        // alert(\"There is a user logged in\");\n          this.setState({ user });\n          localStorage.setItem(\"user\", user.uid);\n      } else {\n        // alert(\"There is no user logged in\");\n        this.setState({ user: null });\n        localStorage.removeItem(\"user\");\n      }\n    })\n\n  }\n\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}