{"version":3,"sources":["config/firebase.js","components/NavBar.js","components/LandingPage.js","components/CurrentStreams.js","components/Profile.js","components/Categories.js","components/Guide.js","components/Main.js","components/SignUp.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","NavBar","color","dark","expand","className","icon","onClick","this","toggleCollapse","left","to","Component","LandingPage","props","state","apiResponse","logout","bind","fire","auth","signOut","style","display","justifyContent","alignItems","height","url","playing","CurrentStreams","_isMounted","updateInfo","handleChange","email","streamDescription","playbackID","streamTitle","streamCategory","streamURL","e","console","log","target","name","setState","value","currentComp","collection","doc","onSnapshot","includeMetadataChanges","data","error","blah","type","onChange","label","group","success","Profile","generateKey","streamKey","fetch","method","then","res","json","stream_key","playbackid","alert","currentUser","update","catch","onAuthStateChanged","user","found","userRef","budget","required","disabled","Categories","Guide","Main","exact","path","component","SignUp","signup","password","preventDefault","createUserWithEmailAndPassword","u","set","width","md","validate","Login","login","showsignup","signInWithEmailAndPassword","padding","App","authListener","localStorage","setItem","uid","removeItem","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.75d23de0.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\n// Your web app's Firebase configuration\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDT8vlV4rmSkA29wHnamuDAszkx_rTzw6s\",\n  authDomain: \"hacksc-2020-72721.firebaseapp.com\",\n  databaseURL: \"https://hacksc-2020-72721.firebaseio.com\",\n  projectId: \"hacksc-2020-72721\",\n  storageBucket: \"hacksc-2020-72721.appspot.com\",\n  messagingSenderId: \"120013387215\",\n  appId: \"1:120013387215:web:fc65d61082c955dff94eba\"\n};\n\n// ORIGINAL PIGGY BANK DATABASE (use when storage is not full)\n// var firebaseConfig = {\n//   apiKey: \"AIzaSyDm-9VzoXGLZji26XDghH9gx_n52rgmsHY\",\n//   authDomain: \"piggy-bank-71144.firebaseapp.com\",\n//   databaseURL: \"https://piggy-bank-71144.firebaseio.com\",\n//   projectId: \"piggy-bank-71144\",\n//   storageBucket: \"piggy-bank-71144.appspot.com\",\n//   messagingSenderId: \"677504131374\",\n//   appId: \"1:677504131374:web:7d80a2b5b5a3b094ed5abf\"\n// };\n\n// BACKUP PIGGY DATABASE\n\n/*var firebaseConfig = {\n     apiKey: \"AIzaSyBNGQ94b3sh_CA0Xud_2RKTDZcrmCSV1aQ\",\n     authDomain: \"piggy-backup.firebaseapp.com\",\n     databaseURL: \"https://piggy-backup.firebaseio.com\",\n     projectId: \"piggy-backup\",\n     storageBucket: \"piggy-backup.appspot.com\",\n     messagingSenderId: \"314565949487\",\n     appId: \"1:314565949487:web:e5b4472d9b1da8b367aeda\",\n     measurementId: \"G-VDJS8GGM8B\"\n   };*/\n\n//  //BACKUP PIGGY DATABASE 2\n\n/*var firebaseConfig = {\n     apiKey: \"AIzaSyB-3c-A7D9wL760suIlG1rpuaoHyCMnkcA\",\n     authDomain: \"piggybankbackup2.firebaseapp.com\",\n     databaseURL: \"https://piggybankbackup2.firebaseio.com\",\n     projectId: \"piggybankbackup2\",\n     storageBucket: \"piggybankbackup2.appspot.com\",\n     messagingSenderId: \"735217764135\",\n     appId: \"1:735217764135:web:70c868ce0316074a32cb02\",\n     measurementId: \"G-HZCM51BE1D\"\n   };*/\n\n//BACKUP PIGGY 3\n\n//    var firebaseConfig = {\n//      apiKey: \"AIzaSyBcdCvaA4MwFmUTjUcuPdsbqvCt-bNTJXw\",\n//      authDomain: \"piggy-back3.firebaseapp.com\",\n//      databaseURL: \"https://piggy-back3.firebaseio.com\",\n//      projectId: \"piggy-back3\",\n//      storageBucket: \"piggy-back3.appspot.com\",\n//      messagingSenderId: \"875501784070\",\n//      appId: \"1:875501784070:web:f4819338804975fc678787\"\n//    };\n\n//  var firebaseConfig = {\n//    apiKey: \"AIzaSyBcdCvaA4MwFmUTjUcuPdsbqvCt-bNTJXw\",\n//    authDomain: \"piggy-back3.firebaseapp.com\",\n//    databaseURL: \"https://piggy-back3.firebaseio.com\",\n//    projectId: \"piggy-back3\",\n//    storageBucket: \"piggy-back3.appspot.com\",\n//    messagingSenderId: \"875501784070\",\n//    appId: \"1:875501784070:web:f4819338804975fc678787\"\n//  };\n\n//BACKUP PIGGY 4\n// var firebaseConfig = {\n//   apiKey: \"AIzaSyBYex1zr2ofgcb-URB1jLEELCZmhpPSIx8\",\n//   authDomain: \"piggybankbackup4.firebaseapp.com\",\n//   databaseURL: \"https://piggybankbackup4.firebaseio.com\",\n//   projectId: \"piggybankbackup4\",\n//   storageBucket: \"piggybankbackup4.appspot.com\",\n//   messagingSenderId: \"678932646779\",\n//   appId: \"1:678932646779:web:7fd798f64138e0db63cbde\"\n// };\n\n//BACKUP PIGGY 5\n\n/*\n  var firebaseConfig = {\n    apiKey: \"AIzaSyD3P-Q1xAbQTYTPkD4mYnHDdEjl6dv2k1I\",\n    authDomain: \"piggybankbackup5.firebaseapp.com\",\n    databaseURL: \"https://piggybankbackup5.firebaseio.com\",\n    projectId: \"piggybankbackup5\",\n    storageBucket: \"piggybankbackup5.appspot.com\",\n    messagingSenderId: \"364062625328\",\n    appId: \"1:364062625328:web:1fab3cbafa6cd01d2067f5\"\n  };*/\n\n// var firebaseConfig = {\n//   apiKey: \"AIzaSyD3P-Q1xAbQTYTPkD4mYnHDdEjl6dv2k1I\",\n//   authDomain: \"piggybankbackup5.firebaseapp.com\",\n//   databaseURL: \"https://piggybankbackup5.firebaseio.com\",\n//   projectId: \"piggybankbackup5\",\n//   storageBucket: \"piggybankbackup5.appspot.com\",\n//   messagingSenderId: \"364062625328\",\n//   appId: \"1:364062625328:web:1fab3cbafa6cd01d2067f5\"\n// };\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// this.db = firebase.firestore();\nconst db = firebase.firestore();\n\nexport { db };\n\n// export default db;\n// export { db };\n\nexport default firebase;\n","import React, { Component } from 'react';\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavItem,\n  MDBNavLink,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBFormInline,\n  MDBDropdown,\n  MDBDropdownToggle,\n  MDBDropdownMenu,\n  MDBDropdownItem,\n  MDBIcon\n} from \"mdbreact\";\n\nexport class NavBar extends Component {\n    render() {\n        return (\n          <div>\n            {/* // <div> */}\n            <MDBNavbar color=\"dark-green\" dark expand=\"md\">\n              <MDBNavbarBrand>\n                <strong className=\"white-text\"> EducateMe</strong>{\" \"}\n                <MDBIcon icon=\"apple-alt\" />\n              </MDBNavbarBrand>\n              <MDBNavbarToggler onClick={this.toggleCollapse} />\n              {/* <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar> */}\n              <MDBNavbarNav left>\n                <MDBNavItem>\n                  <MDBNavLink to=\"../\">\n                    <MDBIcon icon=\"home\" />\n                    Home\n                  </MDBNavLink>\n                </MDBNavItem>\n                <MDBNavItem>\n                  {/* <Link to=\"/streams\">About Me</Link> */}\n\n                  <MDBNavLink to={\"/streams\"}>\n                    <MDBIcon icon=\"video\" />\n                    Streams\n                  </MDBNavLink>\n                </MDBNavItem>\n                {/* <MDBNavItem>\n                  <MDBNavLink to=\"/categories\">Categories</MDBNavLink>\n                </MDBNavItem> */}\n                <MDBNavItem>\n                  <MDBNavLink to=\"/profile\">\n                    <MDBIcon icon=\"user-edit\" />\n                    Profile\n                  </MDBNavLink>\n                </MDBNavItem>\n                <MDBNavItem>\n                  <MDBNavLink to=\"/guide\">\n                    <MDBIcon icon=\"clipboard-list\" />\n                    Guide\n                  </MDBNavLink>\n                </MDBNavItem>\n              </MDBNavbarNav>\n              {/* </div> */}\n              {/* </div> */}\n            </MDBNavbar>\n          </div>\n        );\n    }\n}\n\nexport default NavBar\n","import React, { Component } from \"react\";\n// import Router from 'react-router';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport fire from \"../config/firebase\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody\n} from \"mdbreact\";\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavItem,\n  MDBNavLink,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBFormInline,\n  MDBDropdown,\n  MDBDropdownToggle,\n  MDBDropdownMenu,\n  MDBDropdownItem\n} from \"mdbreact\";\nimport ReactPlayer from \"react-player\";\nimport NavBar from './NavBar';\nexport class LandingPage extends Component {\n         constructor(props) {\n           super(props);\n           this.state = { apiResponse: \"default testAPI state\" };\n          //  this.callAPI = this.callAPI.bind(this);\n           this.logout = this.logout.bind(this);\n         }\n\n        //  callAPI() {\n        //    console.log(\"sup\");\n        //    fetch(\"http://localhost:9000/testAPI\")\n        //      .then(() => alert(\"passed thru\")) // testing\n        //      .then(res => res.text()) //testing\n        //      .then(res => this.setState({ apiResponse: res }))\n        //      // console.log(res)\n        //      .catch(error => alert(error));\n        //  }\n\n        //  callAPI() {\n        //    fetch(\"http://localhost:9000/streamLive\")\n        //      .then(res => res.text())\n        //      .then(res => this.setState({ apiResponse: res }));\n        //  }\n\n         componentWillMount() {\n          //  this.callAPI();\n         }\n\n         logout() {\n           fire.auth().signOut();\n         }\n\n         render() {\n           return (\n             <div\n             // style={{\n             //   display: \"flex\",\n             //   justifyContent: \"center\",\n             //   alignItems: \"center\",\n             //   height: \"100vh\"\n             // }}\n             >\n               {/* <Router> */}\n               {/* <NavBar /> */}\n               <div\n                 style={{\n                   display: \"flex\",\n                   justifyContent: \"center\",\n                   alignItems: \"center\",\n                   height: \"100vh\"\n                 }}\n               >\n                 <MDBContainer>\n                   <MDBCard>\n                     <center>\n                       <h1>EducateMe</h1>\n                       <h3>\n                         Free interactive live streams for educators and\n                         students\n                       </h3>\n                       <ReactPlayer\n                         url=\"https://stream.mux.com/VOyYAIXDgyPVGylxN00GJ01edJAhBUlAkS.m3u8\"\n                         playing=\"true\"\n                       />\n                       <p>\n                         {/* Welcome to EducateMe - the first free and live education platform for instructors and students. */}\n                       </p>\n                     </center>\n                     <MDBBtn onClick={this.logout}>Logout</MDBBtn>\n                   </MDBCard>\n                 </MDBContainer>\n\n                 {/* <p className=\"App-intro\">{this.state.apiResponse}</p> */}\n               </div>\n             </div>\n           );\n         }\n       }\n\nexport default LandingPage;\n","import React, { Component } from 'react'\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBIcon\n} from \"mdbreact\";\nimport { db } from \"../config/firebase\";\nimport fire from \"../config/firebase\";\nimport ReactPlayer from \"react-player\";\n\nexport class CurrentStreams extends Component {\n         _isMounted = false;\n         constructor() {\n           super();\n           this.updateInfo = this.updateInfo.bind(this);\n           this.handleChange = this.handleChange.bind(this);\n           //  this.generateKey = this.generateKey.bind(this);\n           //  this.logout = this.logout.bind(this);\n           this.state = {\n             //  streamKey: \"\",\n             email: \"\",\n             streamDescription: \"\",\n             playbackID: \"\",\n             streamTitle: \"\",\n             streamCategory: \"\",\n             streamURL: \"\"\n           };\n         }\n         handleChange(e) {\n          //  console.log(e.target.value);\n           // console.log(e.target.name);\n           if (this._isMounted) {\n             console.log(e.target.name);\n             this.setState({ [e.target.name]: e.target.value });\n             console.log(e.target.value);\n           }\n              console.log(this.state.name);\n         }\n\n         updateInfo() {\n                 let currentComp = this;\n              // fire.auth().onAuthStateChanged(function(user) {\n                // if (user) {\n                  var found = 0;\n                  var userRef = db\n                    .collection(\"users\")\n                    .doc(this.state.email);\n                  // var username = fire.auth().currentUser.email;\n                  userRef.onSnapshot(\n                    {\n                      includeMetadataChanges: true\n                    },\n                    function(doc) {\n                      try {\n                        //    if (this._isMounted) {\n\n                        currentComp.setState({\n                          //  budget: doc.data().budget,\n                          //  bio: doc.data().bio,\n                          //  focus: doc.data().focus,\n                          //  name: doc.data().name\n                          // streamKey: doc.data().streamKey,\n                          streamDescription: doc.data().streamDescription,\n                          playbackID: doc.data().playbackID,\n                          streamTitle: doc.data().streamTitle,\n                          streamCategory: doc.data().streamCategory\n                        });\n                        // }\n                      } catch (error) {\n                        console.log(\"We getting an error: \", error); // ADD back later\n                        found = 0;\n                      }\n                    }\n                  );\n\n                  // if (found == 1) {\n                  //   //console.log(\"does hit this\")\n                  // } else {\n                  //   currentComp.setState({\n                  //     budget: [\"N/A\"]\n                  //   });\n                  // }\n                // }\n              // });\n              // this.updateInfo();\n              // this.updateInfo();\n           var blah = \"\";\n           blah += \"https://stream.mux.com/\";\n           blah += this.state.playbackID;\n           blah += \".m3u8\";\n          //  console.log(blah);\n           this.setState({streamURL: blah}, () => {\n             console.log(blah);\n           });\n          //  this.render();\n          //  this.componentWillUnmount();\n          //  this.componentDidMount();\n          //  var bruh = JSON.stringify(this.state.playbackID);\n          //  console.log(this.state.playbackID);\n          //  console.log(JSON.stringify(this.state.playbackID));\n          //  blah = \"https://stream.mux.com/\" + bruh + \".m3u8\";\n          //  this.setState({ streamURL: blah });\n          //  console.log(this.state.streamURL);\n         }\n\n         componentWillUnmount() {\n           this._isMounted = false;\n         }\n\n         componentDidMount() {\n           this._isMounted = true;  \n         }\n        //  componentDidMount() {\n        //    this._isMounted = true;\n\n        //    let currentComp = this;\n        //    // this.updateInfo();\n        //    fire.auth().onAuthStateChanged(function(user) {\n        //      if (user) {\n        //        var found = 0;\n        //        var userRef = db\n        //          .collection(\"users\")\n        //          .doc(this.statee.use);\n        //        var username = fire.auth().currentUser.email;\n        //        userRef.onSnapshot(\n        //          {\n        //            includeMetadataChanges: true\n        //          },\n        //          function(doc) {\n        //            try {\n        //              //    if (this._isMounted) {\n\n        //              currentComp.setState({\n        //                //  budget: doc.data().budget,\n        //                //  bio: doc.data().bio,\n        //                //  focus: doc.data().focus,\n        //                //  name: doc.data().name\n        //                // streamKey: doc.data().streamKey,\n        //                streamDescription: doc.data().streamDescription,\n        //                playbackID: doc.data().playbackID,\n        //                streamTitle: doc.data().streamTitle,\n        //                streamCategory: doc.data().streamCategory\n        //              });\n        //              // }\n        //            } catch (error) {\n        //              console.log(\"We getting an error: \", error); // ADD back later\n        //              found = 0;\n        //            }\n        //          }\n        //        );\n\n        //        if (found == 1) {\n        //          //console.log(\"does hit this\")\n        //        } else {\n        //          currentComp.setState({\n        //            budget: [\"N/A\"]\n        //          });\n        //        }\n        //      }\n        //    });\n        //   //  this.updateInfo();\n        //  }\n\n\n\n         render() {\n           return (\n             <div\n               style={{\n                 display: \"flex\",\n                 justifyContent: \"center\",\n                 alignItems: \"center\",\n                 height: \"100vh\"\n               }}\n             >\n               <MDBContainer>\n                 <MDBCard>\n                   <center>\n                     <MDBBtn\n                       color=\"green\"\n                       type=\"button\"\n                       onClick={this.updateInfo}\n                     >\n                       {/* <MDBIcon icon=\"video\" /> */}\n                       Load Stream\n                     </MDBBtn>\n                     <ReactPlayer url={this.state.streamURL} playing=\"true\" />\n                     <MDBInput\n                       value={this.state.email}\n                       onChange={this.handleChange}\n                       label=\"Enter user's email\"\n                       //  icon=\"envelope\"\n                       group\n                       name=\"email\"\n                       type=\"text\"\n                       //  validate\n                       error=\"wrong\"\n                       success=\"right\"\n\n                       //  disabled\n                     />\n                     {/* <div className=\"text-center py-4 mt-3\"> */}\n\n                     {/* <h3>Current streams here!</h3> */}\n                     <h4>Title: {this.state.streamTitle}</h4>\n                     <h5>Description: {this.state.streamDescription}</h5>\n                     <h6>Category: {this.state.streamCategory}</h6>\n\n                     <p></p>\n                   </center>\n                 </MDBCard>\n               </MDBContainer>\n             </div>\n           );\n         }\n       }\n\nexport default CurrentStreams;\n","import React, { Component } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBIcon\n} from \"mdbreact\";\nimport { db } from \"../config/firebase\";\nimport fire from \"../config/firebase\";\nexport class Profile extends Component {\n  _isMounted = false;\n  constructor() {\n    super();\n    this.updateInfo = this.updateInfo.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.generateKey = this.generateKey.bind(this);\n    //  this.logout = this.logout.bind(this);\n    this.state = {\n      //  budget: \"\",\n      //  bio: \"\",\n      //  focus: \"\",\n      //  display_budget: \"\",\n      streamKey: \"\",\n      streamDescription: \"\",\n      playbackID: \"\",\n      streamTitle: \"\",\n      streamCategory: \"\"\n    };\n  }\n  handleChange(e) {\n    console.log(e.target.value);\n    // console.log(e.target.name);\n    if (this._isMounted) {\n      this.setState({ [e.target.name]: e.target.value });\n    }\n    //    console.log(this.state.name);\n  }\n\n  updateInfo(e) {\n    var docRef = db.collection(\"users\").doc(fire.auth().currentUser.email);\n    docRef\n      .update({\n        streamKey: this.state.streamKey,\n        playbackID: this.state.playbackID,\n        streamTitle: this.state.streamTitle,\n        streamDescription: this.state.streamDescription,\n        streamCategory: this.state.streamCategory\n      })\n      .then(function() {\n        alert(\"UPDATE DONE\");\n      })\n      .catch(function(error) {\n        alert(\"something went wrong..\");\n      });\n  }\n\n  // fetch('/streamLive', { method: 'POST'}).then((res) => res.json()).then(console.log).catch(console.error)\n  generateKey = () => {\n    if (this.state.streamKey != null) {\n      alert(\"You already have a stream key.\");\n      return;\n    }\n    // callAPI() {\n    fetch(\"http://localhost:9000/streamLive\", {\n      method: \"POST\"\n    })\n      .then(res => res.json())\n      .then(data =>\n        this.setState({\n          streamKey: data.stream_key,\n          playbackID: data.playbackid\n        })\n      );\n    this.updateInfo();\n  };\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n  componentDidMount() {\n    this._isMounted = true;\n\n    let currentComp = this;\n\n    fire.auth().onAuthStateChanged(function(user) {\n      if (user) {\n        var found = 0;\n        var userRef = db.collection(\"users\").doc(fire.auth().currentUser.email);\n        var username = fire.auth().currentUser.email;\n        userRef.onSnapshot(\n          {\n            includeMetadataChanges: true\n          },\n          function(doc) {\n            try {\n              //    if (this._isMounted) {\n\n              currentComp.setState({\n                //  budget: doc.data().budget,\n                //  bio: doc.data().bio,\n                //  focus: doc.data().focus,\n                //  name: doc.data().name\n                streamKey: doc.data().streamKey,\n                streamDescription: doc.data().streamDescription,\n                playbackID: doc.data().playbackID,\n                streamTitle: doc.data().streamTitle,\n                streamCategory: doc.data().streamCategory\n              });\n              // }\n            } catch (error) {\n              console.log(\"We getting an error: \", error); // ADD back later\n              found = 0;\n            }\n          }\n        );\n\n        if (found == 1) {\n          //console.log(\"does hit this\")\n        } else {\n          currentComp.setState({\n            budget: [\"N/A\"]\n          });\n        }\n      }\n    });\n  }\n\n  logout() {\n    fire.auth().signOut();\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"100vh\"\n        }}\n      >\n        <MDBContainer>\n          <MDBCard>\n            <center>\n              <h3>Stream Configurations</h3>\n              {/* <p>\n                Lorem Ipsum is simply dummy text of the printing and typesetting\n                industry. Lorem Ipsum has been the industry's standard dummy\n                text ever since the 1500s, when an unknown printer took a galley\n                of type and scrambled it to make a type specimen book. It has\n                survived not only five centuries, but also the leap into\n                electronic typesetting, remaining essentially unchanged. It was\n                popularised in the 1960s with the release of Letraset sheets\n                containing Lorem Ipsum passages, and more recently with desktop\n                publishing software like Aldus PageMaker including versions of\n                Lorem Ipsum.\n              </p> */}\n              <MDBInput\n                value={this.state.streamTitle}\n                onChange={this.handleChange}\n                label=\"Stream Title\"\n                //  icon=\"envelope\"\n                group\n                name=\"streamTitle\"\n                type=\"text\"\n                //  validate\n                error=\"wrong\"\n                success=\"right\"\n                required\n                //  disabled\n              />\n              <MDBInput\n                value={this.state.streamDescription}\n                onChange={this.handleChange}\n                label=\"Stream Description\"\n                //  icon=\"envelope\"\n                group\n                name=\"streamDescription\"\n                type=\"text\"\n                //  validate\n                error=\"wrong\"\n                success=\"right\"\n                required\n                //  disabled\n              />\n              <MDBInput\n                value={this.state.streamCategory}\n                onChange={this.handleChange}\n                label=\"Stream Category\"\n                //  icon=\"envelope\"\n                group\n                name=\"streamCategory\"\n                type=\"text\"\n                //  validate\n                error=\"wrong\"\n                success=\"right\"\n                required\n                //  disabled\n              />\n              <MDBInput\n                value={this.state.streamKey}\n                onChange={this.handleChange}\n                label=\"Stream Key\"\n                //  icon=\"envelope\"\n                group\n                name=\"streamKey\"\n                type=\"text\"\n                //  validate\n                error=\"wrong\"\n                success=\"right\"\n                disabled\n                //  disabled\n              />\n              <MDBInput\n                value={this.state.playbackID}\n                onChange={this.handleChange}\n                label=\"Playback ID\"\n                //  icon=\"envelope\"\n                group\n                name=\"playbackID\"\n                type=\"text\"\n                //  validate\n                error=\"wrong\"\n                success=\"right\"\n                disabled\n                //  disabled\n              />\n\n              <div className=\"text-center py-4 mt-3\">\n                <MDBBtn color=\"primary\" type=\"button\" onClick={this.updateInfo}>\n                  <MDBIcon icon=\"edit\" />\n                  Update Info\n                </MDBBtn>\n                <MDBBtn\n                  color=\"warning\"\n                  type=\"button\"\n                  onClick={this.generateKey}\n                >\n                  <MDBIcon icon=\"key\" />\n                  Generate Key\n                </MDBBtn>\n                <MDBBtn color=\"success\" type=\"button\" onClick={this.logout}>\n                  Logout\n                </MDBBtn>\n              </div>\n            </center>\n          </MDBCard>\n        </MDBContainer>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react'\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody\n} from \"mdbreact\";\n\nexport class Categories extends Component {\n    render() {\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"100vh\"\n            }}\n          >\n            <MDBContainer>\n              <MDBCard>\n                <center>\n                  <h3>Categories here!</h3>\n                  <p>\n                    Lorem Ipsum is simply dummy text of the printing and\n                    typesetting industry. Lorem Ipsum has been the industry's\n                    standard dummy text ever since the 1500s, when an unknown\n                    printer took a galley of type and scrambled it to make a\n                    type specimen book. It has survived not only five centuries,\n                    but also the leap into electronic typesetting, remaining\n                    essentially unchanged. It was popularised in the 1960s with\n                    the release of Letraset sheets containing Lorem Ipsum\n                    passages, and more recently with desktop publishing software\n                    like Aldus PageMaker including versions of Lorem Ipsum.\n                  </p>\n                </center>\n              </MDBCard>\n            </MDBContainer>\n          </div>\n        )\n    }\n}\n\nexport default Categories\n","import React, { Component } from 'react'\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard, \n  MDBCardText,\n  MDBCardTitle,\n  MDBCardBody\n} from \"mdbreact\";\n\nexport class Guide extends Component {\n    render() {\n        return (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"100vh\"\n            }}\n          >\n            <MDBContainer>\n              <MDBCard>\n                <center>\n                  <MDBCardTitle>Card title</MDBCardTitle>\n                  <MDBCardText>\n                    Some quick example text to build on the card title and make\n                    up the bulk of the card&apos;s content.\n                  </MDBCardText>\n                  <h3>Guide here!</h3>\n                  <p>\n                    Lorem Ipsum is simply dummy text of the printing and\n                    typesetting industry. Lorem Ipsum has been the industry's\n                    standard dummy text ever since the 1500s, when an unknown\n                    printer took a galley of type and scrambled it to make a\n                    type specimen book. It has survived not only five centuries,\n                    but also the leap into electronic typesetting, remaining\n                    essentially unchanged. It was popularised in the 1960s with\n                    the release of Letraset sheets containing Lorem Ipsum\n                    passages, and more recently with desktop publishing software\n                    like Aldus PageMaker including versions of Lorem Ipsum.\n                  </p>\n                </center>\n              </MDBCard>\n            </MDBContainer>\n          </div>\n        );\n    }\n}\n\nexport default Guide\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport LandingPage from \"./LandingPage.js\";\nimport CurrentStreams from \"./CurrentStreams.js\";\nimport Profile from './Profile';\nimport Categories from './Categories';\nimport Guide from \"./Guide.js\";\n// import AboutMe from \"./aboutme\";\n// import Contact from \"./contact\";\n// import Projects from \"./projects\";\n// import Resume from \"./resume\";\n\nconst Main = () => (\n  <Switch>\n    <Route exact path=\"/\" component={LandingPage} />\n    <Route path=\"/streams\" component={CurrentStreams}/>\n    <Route path=\"/profile\" component={Profile}/>\n    <Route path=\"/categories\" component={Categories}/>\n    <Route path=\"/guide\" component={Guide}/>\n    {/* <Route path=\"/aboutme\" component={AboutMe} />\n    <Route path=\"/contact\" component={Contact} />\n    <Route path=\"/projects\" component={Projects} />\n    <Route path=\"/resume\" component={Resume} /> */}\n  </Switch>\n);\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBModalBody,\n  MDBCardBody\n} from \"mdbreact\";\nimport { Link } from \"react-router-dom\";\nimport fire from \"../config/firebase\";\n\nexport class SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.signup = this.signup.bind(this);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    };\n  }\n  handleChange(e) {\n    // console.log(e.target.value);\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  signup(e) {\n    e.preventDefault();\n    // console.log(\"passed signup\");\n    fire\n      .auth()\n      .createUserWithEmailAndPassword(this.state.email, this.state.password)\n      .then(u => {})\n      .then(u => {\n        console.log(u);\n      })\n      .catch(error => {\n        console.log(error);\n        alert(error);\n      });\n    fire\n      .firestore()\n      .doc(`/users/${this.state.email}`)\n      .set({\n        name: this.state.name,\n        password: this.state.password,\n        streamKey: null,\n        playbackID: null,\n        streamTitle: null,\n        streamDescription: null,\n        streamCategory: null\n        // wallet: 1000\n      });\n  }\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"3vh\",\n          width: \"1000px\"\n        }}\n      >\n        <MDBModalBody>\n          <MDBContainer>\n            <MDBRow>\n              <MDBCol md=\"6\">\n                <MDBCard>\n                  <MDBCardBody>\n                    <form>\n                      <p className=\"h4 text-center py-4\">Sign up</p>\n                      <div className=\"grey-text\">\n                        <MDBInput\n                          value={this.state.name}\n                          onChange={this.handleChange}\n                          label=\"Your name\"\n                          icon=\"user\"\n                          group\n                          name=\"name\"\n                          type=\"text\"\n                          validate\n                          error=\"wrong\"\n                          success=\"right\"\n                        />\n                        <MDBInput\n                          value={this.state.email}\n                          onChange={this.handleChange}\n                          label=\"Your email\"\n                          icon=\"envelope\"\n                          group\n                          name=\"email\"\n                          type=\"email\"\n                          validate\n                          error=\"wrong\"\n                          success=\"right\"\n                        />\n                        {/* <MDBInput\n                          label=\"Confirm your email\"\n                          icon=\"exclamation-triangle\"\n                          group\n                          type=\"text\"\n                          validate\n                          error=\"wrong\"\n                          success=\"right\"\n                        /> */}\n                        <MDBInput\n                          value={this.state.password}\n                          onChange={this.handleChange}\n                          label=\"Your password\"\n                          icon=\"lock\"\n                          group\n                          name=\"password\"\n                          type=\"password\"\n                          validate\n                        />\n                      </div>\n                      <div className=\"text-center py-4 mt-3\">\n                        <MDBBtn\n                          color=\"orange\"\n                          type=\"submit\"\n                          onClick={this.signup}\n                        >\n                          Register\n                        </MDBBtn>\n                        <MDBBtn color=\"blue\" type=\"submit\" onClick=\"close\">\n                          Close\n                        </MDBBtn>\n                      </div>\n                    </form>\n                  </MDBCardBody>\n                </MDBCard>\n              </MDBCol>\n            </MDBRow>\n          </MDBContainer>\n        </MDBModalBody>\n      </div>\n    );\n  }\n}\n\nexport default SignUp;\n","import React, { Component } from \"react\";\nimport fire from '../config/firebase';\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody\n} from \"mdbreact\";\nimport SignUp from './SignUp';\n\nexport class Login extends Component {\n         constructor(props) {\n           super(props);\n           this.login = this.login.bind(this);\n           this.handleChange = this.handleChange.bind(this);\n           this.signup = this.signup.bind(this);\n           this.state = {\n             email: \"\",\n             password: \"\",\n             showsignup: false\n             //  isVerified: false\n           };\n         }\n         login(e) {\n           //    if (this.state.isVerified == true) {\n           e.preventDefault();\n           console.log(this.state.email);\n           fire\n             .auth()\n             .signInWithEmailAndPassword(this.state.email, this.state.password)\n             .then(u => {})\n             .catch(error => {\n               alert(error);\n             });\n           //    } else {\n           //  alert(\"Please complete human verification.\");\n           //    }\n         }\n\n         handleChange(e) {\n           // console.log(e.target.value);\n           this.setState({ [e.target.name]: e.target.value });\n         }\n\n         signup(e) {\n             this.setState({\n                 showsignup: true\n             });\n         }\n\n         render() {\n           return (\n             <div\n               style={{\n                 display: \"flex\",\n                 justifyContent: \"center\",\n                 alignItems: \"center\",\n                 height: \"100vh\"\n               }}\n             >\n               <MDBContainer>\n                 <MDBCard style={{ justifyContent: \"center\", padding: \"50px\" }}>\n                   <form>\n                     <p className=\"h5 mb-4\">Sign in to EducateMe</p>\n                     <div className=\"grey-text\">\n                       <MDBInput\n                         value={this.state.email}\n                         onChange={this.handleChange}\n                         label=\"Type your email\"\n                         icon=\"envelope\"\n                         group\n                         name=\"email\"\n                         type=\"email\"\n                         validate\n                         error=\"wrong\"\n                         success=\"right\"\n                       />\n                       <MDBInput\n                         value={this.state.password}\n                         onChange={this.handleChange}\n                         label=\"Type your password\"\n                         icon=\"lock\"\n                         group\n                         name=\"password\"\n                         type=\"password\"\n                         validate\n                       />\n                     </div>\n                     <div className=\"d-inline\">\n                       <MDBBtn type=\"submit\" onClick={this.login}>\n                         Login\n                       </MDBBtn>\n                     </div>\n                     <div className=\"d-inline\">\n                       <MDBBtn color=\"indigo\" onClick={this.signup}>\n                         SignUp\n                       </MDBBtn>\n                       {this.state.showsignup ? <SignUp /> : null}\n                     </div>\n                   </form>\n                 </MDBCard>\n               </MDBContainer>\n             </div>\n           );\n         }\n       }\n\nexport default Login;\n","import React, { Component } from 'react';\nimport \"./App.css\";\nimport Main from './components/Main';\nimport fire from './config/firebase';\nimport {db} from './config/firebase';\nimport Login from './components/Login';\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport {\n  MDBNavbar,\n  MDBNavbarBrand,\n  MDBNavbarNav,\n  MDBNavItem,\n  MDBNavLink,\n  MDBNavbarToggler,\n  MDBCollapse,\n  MDBFormInline,\n  MDBDropdown,\n  MDBDropdownToggle,\n  MDBDropdownMenu,\n  MDBDropdownItem\n} from \"mdbreact\";\nimport NavBar from './components/NavBar';\nexport class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: null,\n      name: \"\"\n    };\n    this.authListener = this.authListener.bind(this);\n  }\n\n  render() {\n    return (\n      <div>\n        \n          {/* </MDBCollapse> */}\n        {/* /</div></MDBNavbar> */}\n        {this.state.user ? <NavBar /> : \"\" }\n        {this.state.user ? \n        // <MDBNavbar color=\"indigo\" dark expand=\"md\">\n        //   <MDBNavbarBrand>\n        //     <strong className=\"white-text\">EducateMe</strong>\n        //   </MDBNavbarBrand>\n        //   <MDBNavbarToggler onClick={this.toggleCollapse} />\n        //   {/* <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar> */}\n        //   <MDBNavbarNav left>\n        //     <MDBNavItem active>\n        //       <MDBNavLink to=\"#!\">Home</MDBNavLink>\n        //     </MDBNavItem>\n        //     <MDBNavItem>\n        //       {/* <Link to=\"/streams\">About Me</Link> */}\n\n        //       <MDBNavLink to={\"/streams\"}>Streams</MDBNavLink>\n        //     </MDBNavItem>\n        //     <MDBNavItem>\n        //       <MDBNavLink to=\"/categories\">Categories</MDBNavLink>\n        //     </MDBNavItem>\n        //     <MDBNavItem>\n        //       <MDBNavLink to=\"/profile\">Profile</MDBNavLink>\n        //     </MDBNavItem>\n        //   </MDBNavbarNav>\n        //   </MDBNavbar>>\n        <Main /> : <Login />}\n        {/* <MDBBtn onClick={this.logout}>Logout</MDBBtn> */}\n      </div>\n\n    );\n  }\n\n  componentDidMount() {\n    this.authListener();\n    // let currentComp = this;\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        // alert(\"There is a user logged in\");\n          this.setState({ user });\n          localStorage.setItem(\"user\", user.uid);\n      } else {\n        // alert(\"There is no user logged in\");\n        this.setState({ user: null });\n        localStorage.removeItem(\"user\");\n      }\n    })\n\n  }\n\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}